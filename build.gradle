import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
	repositories {
		mavenCentral()
		maven {
			name = "gt"
			url = "https://gregtech.overminddl1.com/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
	}
}

apply plugin: 'forge'
apply plugin: 'idea'


sourceCompatibility = targetCompatibility = "1.7"
compileJava { sourceCompatibility = targetCompatibility = "1.7" }

ext.configFile = file "build.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}


version = 4.5
group= "src.train" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Traincraft"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
    replaceIn "Info.java"
    replace "@VERSION1@", config.modVersion.toString()
}

repositories {
	maven {
		name "gt"
		url "https://gregtech.overminddl1.com/"
	}
}

dependencies {
	// `compile` will compile it and run with `runClient`/`runServer`
    // `compileOnly will only compile but not load in dev testing (can still put in the instance mods directory though)
	compileOnly "li.cil.oc:OpenComputers:MC1.7.10-1.7.2.1204:dev"
	compileOnly "com.mod-buildcraft:buildcraft:7.1.23:dev"
	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"

    // quality of life line to simplify importing jars for experimental testing
    compile fileTree(dir: 'libs', include: ['*.jar'])
}


idea
{
	module
	{
		inheritOutputDirs = true
	}
}
